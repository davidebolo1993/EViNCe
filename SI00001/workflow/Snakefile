import os

configfile: "config/config.yaml"

RESULTDIR = config["outdir"]
ALIGNDIR = config["aligndir"]
LOGDIR = config["logdir"]
SCRIPTDIR = config["scriptdir"]
VCFTRUTH=config["vcf"]
VCFDIR=os.path.dirname(VCFTRUTH)

include: "rules/align.smk"
include: "rules/depth.smk"
include: "rules/subsample.smk"
include: "rules/cutesv.smk"
include: "rules/sniffles.smk"
include: "rules/svim.smk"
include: "rules/pbsv.smk"
include: "rules/npinv.smk"
include: "rules/sumsvs.smk"

#first part: map reads to reference and perform kind of QC (coverage)

rule align:
    input:
        expand(f"{ALIGNDIR}/SI00001.{{aligner}}.srt.bam.bai",aligner=["minimap2","pbmm2","ngmlr","lra"])

rule depth:
    input:
        expand(f"{ALIGNDIR}/SI00001.{{aligner}}.coverage_per_chromosome.png", aligner=["minimap2","pbmm2","ngmlr", "lra"]),
        expand(f"{VCFDIR}/SI00001.{{aligner}}.exclude.tsv", aligner=["minimap2","pbmm2","ngmlr","lra"]),
        f"{ALIGNDIR}/SI00001.fraction_of_bases_per_depth.png"

rule subsample:
    input:
        #expand(f"{ALIGNDIR}/{{coverage}}/SI00001.{{aligner}}.srt.bam", coverage=["5X", "10X", "15X", "20X", "25X", "35X"], aligner=["minimap2","pbmm2","ngmlr","lra"]),
        expand(f"{ALIGNDIR}/{{coverage}}/SI00001.{{aligner}}.srt.bam.bai", coverage=["5X", "10X", "15X", "20X", "25X", "35X"], aligner=["minimap2","pbmm2","ngmlr","lra"])

#second part: call variants

rule cutesv:
    input:
        expand(f"{RESULTDIR}/{{aligner}}/cutesv/{{coverage}}/SI00001.vcf", aligner=["minimap2","ngmlr", "lra"], coverage=["5X", "10X", "15X", "20X", "25X", "35X", "total"])

rule sniffles:
    input:
        expand(f"{RESULTDIR}/{{aligner}}/sniffles/{{coverage}}/SI00001.vcf", aligner=["minimap2","ngmlr","lra"], coverage=["5X", "10X", "15X", "20X", "25X", "35X", "total"])

rule svim:
    input:
        expand(f"{RESULTDIR}/{{aligner}}/svim/{{coverage}}/SI00001.vcf", aligner=["minimap2","ngmlr", "lra"], coverage=["5X", "10X", "15X", "20X", "25X", "35X", "total"])

rule pbsv:
    input:
        expand(f"{RESULTDIR}/pbmm2/pbsv/{{coverage}}/SI00001.vcf",coverage=["5X", "10X", "15X", "20X", "25X", "35X", "total"])

rule npinv:
    input:
        expand(f"{RESULTDIR}/{{aligner}}/npinv/{{coverage}}/SI00001.vcf", aligner=["minimap2","ngmlr","lra"], coverage=["5X", "10X", "15X", "20X", "25X", "35X", "total"])

#third part: summarize SVs and calculate precision/recall/f1 score

rule sumsvs:
    input:
        expand(f"{RESULTDIR}/SI00001.{{aligner}}.upset.pdf", aligner=["minimap2", "ngmlr","lra"]),
        expand(f"{RESULTDIR}/SI00001.{{set}}.svs.pdf", set=["cutesv", "sniffles", "svim", "pbsv", "npinv","truth"]),
        f"{RESULTDIR}/SI00001.consensus.svs.pdf",
        f"{RESULTDIR}/SI00001.varstats.tsv"

rule prf1:
    input:
        expand(f"{RESULTDIR}/{{aligner}}/{{tool}}/total/{{tool}}.{{aligner}}.bysupport.tsv", tool=["cutesv", "svim", "sniffles"], aligner=["minimap2", "ngmlr","lra"]),
        f"{RESULTDIR}/SI00001.prf1.bysupport.pdf",
        f"{RESULTDIR}/SI00001.prf1.bycoverage.pdf",
        f"{RESULTDIR}/SI00001.prf1.bycombo.pdf",
        f"{RESULTDIR}/SI00001.tpfpfn.bylength.pdf",
        f"{RESULTDIR}/SI00001.svtype.bylength.pdf"                

